{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learn React\\\\energy-dashboard-app\\\\frontend\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(() => localStorage.getItem(\"token\"));\n  const login = newToken => setToken(newToken);\n  const logout = () => setToken(null);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Ijt9n8KkkFsq5kcYz0apzWgH1WY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) throw new Error(\"useAuth must be used inside AuthProvider\");\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useContext","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","token","setToken","localStorage","getItem","login","newToken","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["D:/Learn React/energy-dashboard-app/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import { createContext, useState, ReactNode, useContext } from \"react\";\r\n\r\ninterface AuthContextType {\r\n  token: string | null;\r\n  login: (token: string) => void;\r\n  logout: () => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\r\n  const [token, setToken] = useState<string | null>(() =>\r\n    localStorage.getItem(\"token\")\r\n  );\r\n\r\n  const login = (newToken: string) => setToken(newToken);\r\n  const logout = () => setToken(null);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ token, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) throw new Error(\"useAuth must be used inside AuthProvider\");\r\n  return context;\r\n};\r\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAaC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQvE,MAAMC,WAAW,gBAAGL,aAAa,CAA8BM,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAkC,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAgB,MAChDW,YAAY,CAACC,OAAO,CAAC,OAAO,CAC9B,CAAC;EAED,MAAMC,KAAK,GAAIC,QAAgB,IAAKJ,QAAQ,CAACI,QAAQ,CAAC;EACtD,MAAMC,MAAM,GAAGA,CAAA,KAAML,QAAQ,CAAC,IAAI,CAAC;EAEnC,oBACEP,OAAA,CAACC,WAAW,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAER,KAAK;MAAEI,KAAK;MAAEE;IAAO,CAAE;IAAAR,QAAA,EACnDA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACb,EAAA,CAbWF,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAezB,OAAO,MAAMiB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGxB,UAAU,CAACG,WAAW,CAAC;EACvC,IAAI,CAACqB,OAAO,EAAE,MAAM,IAAIC,KAAK,CAAC,0CAA0C,CAAC;EACzE,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CAJWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}